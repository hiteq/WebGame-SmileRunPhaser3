{"version":3,"sources":["app.js"],"names":["console","clear","player","ground","ground_texture","bg1","bg2","bg3","box","box_0","box_1","box_2","box_3","heart","deadline","blocks","boxes","platforms","hearts","particles","emitter","tween","GRAVITY","JUMP","speed","box_rate","box_speed","position_y","config","type","Phaser","AUTO","width","Math","min","max","window","innerWidth","height","backgroundColor","parent","pixelArt","physics","default","arcade","gravity","y","debug","scene","preload","create","update","log","load","image","on","error","add","setOrigin","setDisplaySize","staticGroup","group","rectangle","existing","sprite","setBounce","setCollideWorldBounds","collider","deadlineRect","input","keyboard","event","code","body","touching","down","setVelocityY","time","addEvent","delay","callback","createBox","callbackScope","loop","boxType","RND","pick","boxSpeed","boxY","setVelocityX","overlap","hitBox","destroy","x","game","Game"],"mappings":"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","file":"app.9464f9a9.9af03201.js","sourceRoot":"..","sourcesContent":["// import Phaser from \"phaser\";\n\nconsole.clear();\n\n//game balance\nvar GRAVITY = 2000;\nvar JUMP = 700;\nvar speed = 100;\nvar box_rate = 500;\nvar box_speed = [3.5, 5, 10];\nvar position_y = [55, 50, 60, 65];\n\n//usage\nvar player;\nvar ground;\nvar ground_texture;\nvar bg1, bg2, bg3;\nvar box;\nvar box_0, box_1, box_2, box_3;\nvar heart;\nvar deadline;\n\n// groups\nvar blocks;\nvar boxes;\nvar platforms;\nvar hearts;\n\nvar particles;\nvar emitter;\nvar tween;\n\n// game engine setting\nconst config = {\n  type: Phaser.AUTO,\n  width: Math.min(Math.max(320, window.innerWidth), 640),\n  height: 208,\n  backgroundColor: \"#87CEEB\",\n  parent: \"gameframe\",\n  pixelArt: true,\n  physics: {\n    default: \"arcade\",\n    arcade: {\n      gravity: { y: GRAVITY },\n      debug: false\n    }\n  },\n  scene: {\n    preload: preload,\n    create: create,\n    update: update\n  }\n};\n\n// 에셋 로딩\nfunction preload() {\n  console.log(\"에셋 로딩 시작\");\n  \n  // 배경 이미지 로딩\n  this.load.image(\"bg1\", \"assets/bg1.png\");\n  this.load.image(\"bg2\", \"assets/bg2.png\");\n  this.load.image(\"bg3\", \"assets/bg3.png\");\n  \n  // 게임 요소 로딩\n  this.load.image(\"player\", \"assets/smile_jump_14.png\");\n  this.load.image(\"box_g\", \"assets/box_g_1.png\");\n  this.load.image(\"box_a\", \"assets/box_a_1.png\");\n  this.load.image(\"box_g9\", \"assets/box_g9_1.png\");\n  this.load.image(\"box_smile\", \"assets/box_smile_1.png\");\n  this.load.image(\"heart\", \"assets/heart.png\");\n  \n  // 로딩 이벤트 리스너\n  this.load.on('complete', () => {\n    console.log('모든 에셋 로딩 완료');\n  });\n  \n  this.load.on('loaderror', (error) => {\n    console.error('에셋 로딩 에러:', error);\n  });\n}\n\n// 게임 생성\nfunction create() {\n  console.log(\"게임 생성 시작\");\n  \n  // 배경 이미지 추가\n  bg1 = this.add.image(0, 0, \"bg1\").setOrigin(0, 0);\n  bg2 = this.add.image(0, 0, \"bg2\").setOrigin(0, 0);\n  bg3 = this.add.image(0, 0, \"bg3\").setOrigin(0, 0);\n  \n  // 배경 크기 조정\n  bg1.setDisplaySize(config.width, config.height);\n  bg2.setDisplaySize(config.width, config.height);\n  bg3.setDisplaySize(config.width, config.height);\n  \n  // 그룹 생성\n  blocks = this.physics.add.staticGroup();\n  boxes = this.physics.add.group();\n  platforms = this.physics.add.staticGroup();\n  hearts = this.physics.add.group();\n  \n  // 바닥 생성 (시각적으로 보이는 바닥)\n  ground = this.add.rectangle(config.width / 2, config.height - 10, config.width, 20, 0x228B22);\n  this.physics.add.existing(ground, true);\n  \n  // 플레이어 생성\n  player = this.physics.add.sprite(72, config.height - 50, \"player\");\n  player.setBounce(0.2);\n  player.setCollideWorldBounds(true);\n  player.setDisplaySize(32, 32);\n  \n  // 플레이어와 바닥 충돌 설정\n  this.physics.add.collider(player, ground);\n  \n  // 데드라인 생성\n  deadline = this.physics.add.staticGroup();\n  var deadlineRect = this.add.rectangle(-50, config.height / 2, 20, config.height, 0xFF0000);\n  deadline.add(deadlineRect);\n  \n  // 키보드 입력 설정\n  this.input.keyboard.on('keydown', (event) => {\n    if (event.code === 'Space' && player.body.touching.down) {\n      player.setVelocityY(-JUMP);\n    }\n  });\n  \n  // 터치/클릭 입력 설정\n  this.input.on('pointerdown', () => {\n    if (player.body.touching.down) {\n      player.setVelocityY(-JUMP);\n    }\n  });\n  \n  // 박스 생성 타이머\n  this.time.addEvent({\n    delay: box_rate,\n    callback: createBox,\n    callbackScope: this,\n    loop: true\n  });\n  \n  console.log(\"게임 생성 완료\");\n}\n\n// 박스 생성 함수\nfunction createBox() {\n  var boxType = Phaser.Math.RND.pick([\"box_g\", \"box_a\", \"box_g9\", \"box_smile\"]);\n  var boxSpeed = Phaser.Math.RND.pick(box_speed);\n  var boxY = Phaser.Math.RND.pick(position_y);\n  \n  box = this.physics.add.sprite(config.width + 50, config.height - boxY, boxType);\n  box.setVelocityX(-boxSpeed * speed);\n  box.setDisplaySize(32, 32);\n  boxes.add(box);\n  \n  // 박스와 플레이어 충돌\n  this.physics.add.overlap(player, box, hitBox, null, this);\n  \n  // 박스와 바닥 충돌\n  this.physics.add.collider(box, ground);\n  \n  // 박스가 데드라인을 지나면 제거\n  this.physics.add.overlap(box, deadline, (box, deadline) => {\n    box.destroy();\n  }, null, this);\n}\n\n// 박스 충돌 함수\nfunction hitBox(player, box) {\n  console.log(\"박스 충돌!\");\n  box.destroy();\n  // 여기에 점수 증가나 다른 효과 추가 가능\n}\n\n// 게임 업데이트\nfunction update() {\n  // 플레이어 이동\n  player.setVelocityX(speed);\n  \n  // 배경 스크롤링\n  bg1.x -= 0.5;\n  bg2.x -= 1;\n  bg3.x -= 1.5;\n  \n  // 배경이 화면을 벗어나면 리셋\n  if (bg1.x <= -config.width) bg1.x = 0;\n  if (bg2.x <= -config.width) bg2.x = 0;\n  if (bg3.x <= -config.width) bg3.x = 0;\n}\n\n// 게임 시작\nconsole.log(\"게임 초기화 시작\");\nconst game = new Phaser.Game(config);\nconsole.log(\"게임 생성 완료:\", game);\n"]}